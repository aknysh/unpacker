---
- fail: msg='go.path_prefix cannot be empty'
  when: go.path_prefix == ''

- name: detect installed version
  command: head -1 {{ go.path_prefix }}/go/VERSION
  ignore_errors: yes
  register: go_version
  changed_when: go_version.stdout != 'go{}'.format(go.version)

- name: download tarball
  get_url: url=https://storage.googleapis.com/golang/go{{ go.version }}.{{ go.platform }}-{{ go.arch }}.tar.gz
           dest=/var/tmp/go{{ go.version }}.{{ go.platform }}-{{ go.arch }}.tar.gz
           checksum={{ go.checksum }}

- name: create path prefix
  file: path={{ go.path_prefix }}
        state=directory

- name: remove existing version
  file: path={{ go.path_prefix }}/go
        state=absent
  when: go_version.changed

- name: extract tarball
  unarchive: src=/var/tmp/go{{ go.version }}.{{ go.platform }}-{{ go.arch }}.tar.gz
             dest={{ go.path_prefix }}
             creates={{ go.path_prefix }}/go
             copy=no

- name: delete tarballs older than {{ go.tarball_keep_days }} days
  command: find /var/tmp -maxdepth 1 -type f -mtime +{{ go.tarball_keep_days }} -name go*-{{ go.arch }}.tar.gz
  changed_when: false
